syntax="proto2";
package SDDR;

option java_package = "org.mpi_sws.sddr_userspace";
option java_outer_classname = "SDDR_Proto";

message Event
{
  message LinkabilityEvent {
    message Entry {
      enum ModeType {
        Listen = 0;
        AdvertAndListen = 1;
      }
      
      required bytes linkValue = 1;
      required ModeType mode = 2;
    }
    
    repeated Entry entries = 1;
  }

  message EncounterEvent {
    enum EventType {
      UnconfirmedStart = 3;
      Start = 0;
      Update = 1;
      End = 2;
    }

    message RSSIEvent {
      required uint64 time = 1;
      required sint32 rssi = 2;
    }

    required EventType type = 1;
    required uint64 time = 2;
    required int32 id = 3;
    required string address = 4;
    repeated RSSIEvent rssiEvents = 5;
    repeated bytes matchingSet = 6;
    repeated bytes sharedSecrets = 7;
    required uint64 pkid = 8;
    required bool matchingSetUpdated = 9;
  }

  message RetroactiveInfo {
    message BloomInfo {
        message Bloom {
            required uint32 N_ = 1;
            required uint32 M_ = 2;
            required uint32 K_ = 3;
            required bytes bits_ = 4;
        }

        required Bloom bloom = 1;
        required bytes prefix_bytes = 2;
        required uint32 prefix_size = 3;
        required float pFalse = 4;
    }

    repeated BloomInfo blooms = 1;
    repeated bytes matchingSet = 2;
  }
 
  optional LinkabilityEvent linkabilityEvent = 1;
  optional EncounterEvent encounterEvent = 2;
  optional RetroactiveInfo retroactiveInfo = 3;
}

